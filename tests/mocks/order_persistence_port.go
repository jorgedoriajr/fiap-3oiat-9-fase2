// Code generated by mockery v2.32.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// OrderPersistencePort is an autogenerated mock type for the OrderPersistencePort type
type OrderPersistencePort struct {
	mock.Mock
}

// Create provides a mock function with given fields: createOrderPersistenceCommand
func (_m *OrderPersistencePort) Create(createOrderPersistenceCommand interface{}) (interface{}, error) {
	ret := _m.Called(createOrderPersistenceCommand)

	var r0 interface{}
	var r1 error
	if rf, ok := ret.Get(0).(func(interface{}) (interface{}, error)); ok {
		return rf(createOrderPersistenceCommand)
	}
	if rf, ok := ret.Get(0).(func(interface{}) interface{}); ok {
		r0 = rf(createOrderPersistenceCommand)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	if rf, ok := ret.Get(1).(func(interface{}) error); ok {
		r1 = rf(createOrderPersistenceCommand)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewOrderPersistencePort creates a new instance of OrderPersistencePort. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOrderPersistencePort(t interface {
	mock.TestingT
	Cleanup(func())
}) *OrderPersistencePort {
	mock := &OrderPersistencePort{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
