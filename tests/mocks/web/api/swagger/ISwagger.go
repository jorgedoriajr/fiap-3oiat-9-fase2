// Code generated by mockery v2.32.3. DO NOT EDIT.

package mocks

import (
	echo "github.com/labstack/echo/v4"
	mock "github.com/stretchr/testify/mock"
)

// ISwagger is an autogenerated mock type for the ISwagger type
type ISwagger struct {
	mock.Mock
}

type ISwagger_Expecter struct {
	mock *mock.Mock
}

func (_m *ISwagger) EXPECT() *ISwagger_Expecter {
	return &ISwagger_Expecter{mock: &_m.Mock}
}

// RegisterEchoRoutes provides a mock function with given fields: e
func (_m *ISwagger) RegisterEchoRoutes(e *echo.Echo) {
	_m.Called(e)
}

// ISwagger_RegisterEchoRoutes_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RegisterEchoRoutes'
type ISwagger_RegisterEchoRoutes_Call struct {
	*mock.Call
}

// RegisterEchoRoutes is a helper method to define mock.On call
//   - e *echo.Echo
func (_e *ISwagger_Expecter) RegisterEchoRoutes(e interface{}) *ISwagger_RegisterEchoRoutes_Call {
	return &ISwagger_RegisterEchoRoutes_Call{Call: _e.mock.On("RegisterEchoRoutes", e)}
}

func (_c *ISwagger_RegisterEchoRoutes_Call) Run(run func(e *echo.Echo)) *ISwagger_RegisterEchoRoutes_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*echo.Echo))
	})
	return _c
}

func (_c *ISwagger_RegisterEchoRoutes_Call) Return() *ISwagger_RegisterEchoRoutes_Call {
	_c.Call.Return()
	return _c
}

func (_c *ISwagger_RegisterEchoRoutes_Call) RunAndReturn(run func(*echo.Echo)) *ISwagger_RegisterEchoRoutes_Call {
	_c.Call.Return(run)
	return _c
}

// NewISwagger creates a new instance of ISwagger. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewISwagger(t interface {
	mock.TestingT
	Cleanup(func())
}) *ISwagger {
	mock := &ISwagger{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
